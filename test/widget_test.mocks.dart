// Mocks generated by Mockito 5.4.4 from annotations
// in todo_list/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:ui' as _i10;

import 'package:flutter/material.dart' as _i3;
import 'package:get/get.dart' as _i2;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:todo_list/features/todo/data/data_sources/todo.dart' as _i5;
import 'package:todo_list/features/todo/data/models/todo_states.dart' as _i6;
import 'package:todo_list/features/todo/presentation/controllers/todo_controller.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRxList_0<E> extends _i1.SmartFake implements _i2.RxList<E> {
  _FakeRxList_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxBool_1 extends _i1.SmartFake implements _i2.RxBool {
  _FakeRxBool_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRx_2<T> extends _i1.SmartFake implements _i2.Rx<T> {
  _FakeRx_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_3 extends _i1.SmartFake
    implements _i3.TextEditingController {
  _FakeTextEditingController_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxn_4<T> extends _i1.SmartFake implements _i2.Rxn<T> {
  _FakeRxn_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternalFinalCallback_5<T> extends _i1.SmartFake
    implements _i2.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TodoController].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoController extends _i1.Mock implements _i4.TodoController {
  MockTodoController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.RxList<_i5.Todo> get todoList => (super.noSuchMethod(
        Invocation.getter(#todoList),
        returnValue: _FakeRxList_0<_i5.Todo>(
          this,
          Invocation.getter(#todoList),
        ),
      ) as _i2.RxList<_i5.Todo>);

  @override
  set todoList(_i2.RxList<_i5.Todo>? _todoList) => super.noSuchMethod(
        Invocation.setter(
          #todoList,
          _todoList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: _FakeRxBool_1(
          this,
          Invocation.getter(#isLoading),
        ),
      ) as _i2.RxBool);

  @override
  set isLoading(_i2.RxBool? _isLoading) => super.noSuchMethod(
        Invocation.setter(
          #isLoading,
          _isLoading,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get isGettingData => (super.noSuchMethod(
        Invocation.getter(#isGettingData),
        returnValue: _FakeRxBool_1(
          this,
          Invocation.getter(#isGettingData),
        ),
      ) as _i2.RxBool);

  @override
  set isGettingData(_i2.RxBool? _isGettingData) => super.noSuchMethod(
        Invocation.setter(
          #isGettingData,
          _isGettingData,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get isFilter => (super.noSuchMethod(
        Invocation.getter(#isFilter),
        returnValue: _FakeRxBool_1(
          this,
          Invocation.getter(#isFilter),
        ),
      ) as _i2.RxBool);

  @override
  set isFilter(_i2.RxBool? _isFilter) => super.noSuchMethod(
        Invocation.setter(
          #isFilter,
          _isFilter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Rx<_i6.TodoStates> get filterValue => (super.noSuchMethod(
        Invocation.getter(#filterValue),
        returnValue: _FakeRx_2<_i6.TodoStates>(
          this,
          Invocation.getter(#filterValue),
        ),
      ) as _i2.Rx<_i6.TodoStates>);

  @override
  set filterValue(_i2.Rx<_i6.TodoStates>? _filterValue) => super.noSuchMethod(
        Invocation.setter(
          #filterValue,
          _filterValue,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get todoController => (super.noSuchMethod(
        Invocation.getter(#todoController),
        returnValue: _FakeTextEditingController_3(
          this,
          Invocation.getter(#todoController),
        ),
      ) as _i3.TextEditingController);

  @override
  _i3.TextEditingController get descriptionController => (super.noSuchMethod(
        Invocation.getter(#descriptionController),
        returnValue: _FakeTextEditingController_3(
          this,
          Invocation.getter(#descriptionController),
        ),
      ) as _i3.TextEditingController);

  @override
  _i2.Rxn<String> get todoErrorText => (super.noSuchMethod(
        Invocation.getter(#todoErrorText),
        returnValue: _FakeRxn_4<String>(
          this,
          Invocation.getter(#todoErrorText),
        ),
      ) as _i2.Rxn<String>);

  @override
  set todoErrorText(_i2.Rxn<String>? _todoErrorText) => super.noSuchMethod(
        Invocation.setter(
          #todoErrorText,
          _todoErrorText,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get completeField => (super.noSuchMethod(
        Invocation.getter(#completeField),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#completeField),
        ),
      ) as String);

  @override
  set completeField(String? _completeField) => super.noSuchMethod(
        Invocation.setter(
          #completeField,
          _completeField,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isDataCompleted => (super.noSuchMethod(
        Invocation.getter(#isDataCompleted),
        returnValue: false,
      ) as bool);

  @override
  _i2.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_5<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_5<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
      ) as int);

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void validateField(
    _i3.TextEditingController? controller,
    _i2.Rxn<String>? errorText,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #validateField,
          [
            controller,
            errorText,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void validateFields() => super.noSuchMethod(
        Invocation.method(
          #validateFields,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> handleChangeFilterValue(_i6.TodoStates? state) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleChangeFilterValue,
          [state],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> getTodoList([bool? isCompleted]) => (super.noSuchMethod(
        Invocation.method(
          #getTodoList,
          [isCompleted],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<bool> insertTodo() => (super.noSuchMethod(
        Invocation.method(
          #insertTodo,
          [],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<bool> updateTodo(_i5.Todo? todo) => (super.noSuchMethod(
        Invocation.method(
          #updateTodo,
          [todo],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<void> deleteTodo(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [id],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteAll() => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void getCurrentTodo(_i5.Todo? todo) => super.noSuchMethod(
        Invocation.method(
          #getCurrentTodo,
          [todo],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearFormData() => super.noSuchMethod(
        Invocation.method(
          #clearFormData,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Disposer addListener(_i9.GetStateUpdate? listener) => (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
      ) as _i9.Disposer);

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    _i10.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Disposer addListenerId(
    Object? key,
    _i9.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
      ) as _i9.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}
